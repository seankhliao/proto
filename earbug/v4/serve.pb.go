// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: earbug/v4/serve.proto

package earbugv4

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateRecentlyPlayedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRecentlyPlayedRequest) Reset() {
	*x = UpdateRecentlyPlayedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_earbug_v4_serve_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecentlyPlayedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecentlyPlayedRequest) ProtoMessage() {}

func (x *UpdateRecentlyPlayedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_earbug_v4_serve_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecentlyPlayedRequest.ProtoReflect.Descriptor instead.
func (*UpdateRecentlyPlayedRequest) Descriptor() ([]byte, []int) {
	return file_earbug_v4_serve_proto_rawDescGZIP(), []int{0}
}

type UpdateRecentlyPlayedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRecentlyPlayedResponse) Reset() {
	*x = UpdateRecentlyPlayedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_earbug_v4_serve_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecentlyPlayedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecentlyPlayedResponse) ProtoMessage() {}

func (x *UpdateRecentlyPlayedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_earbug_v4_serve_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecentlyPlayedResponse.ProtoReflect.Descriptor instead.
func (*UpdateRecentlyPlayedResponse) Descriptor() ([]byte, []int) {
	return file_earbug_v4_serve_proto_rawDescGZIP(), []int{1}
}

type AuthorizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *AuthorizeRequest) Reset() {
	*x = AuthorizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_earbug_v4_serve_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeRequest) ProtoMessage() {}

func (x *AuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_earbug_v4_serve_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeRequest.ProtoReflect.Descriptor instead.
func (*AuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_earbug_v4_serve_proto_rawDescGZIP(), []int{2}
}

func (x *AuthorizeRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AuthorizeRequest) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type AuthorizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthUrl string `protobuf:"bytes,1,opt,name=auth_url,json=authUrl,proto3" json:"auth_url,omitempty"`
}

func (x *AuthorizeResponse) Reset() {
	*x = AuthorizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_earbug_v4_serve_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeResponse) ProtoMessage() {}

func (x *AuthorizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_earbug_v4_serve_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeResponse.ProtoReflect.Descriptor instead.
func (*AuthorizeResponse) Descriptor() ([]byte, []int) {
	return file_earbug_v4_serve_proto_rawDescGZIP(), []int{3}
}

func (x *AuthorizeResponse) GetAuthUrl() string {
	if x != nil {
		return x.AuthUrl
	}
	return ""
}

type ExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ExportRequest) Reset() {
	*x = ExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_earbug_v4_serve_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportRequest) ProtoMessage() {}

func (x *ExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_earbug_v4_serve_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportRequest.ProtoReflect.Descriptor instead.
func (*ExportRequest) Descriptor() ([]byte, []int) {
	return file_earbug_v4_serve_proto_rawDescGZIP(), []int{4}
}

func (x *ExportRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *ExportRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ExportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ExportResponse) Reset() {
	*x = ExportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_earbug_v4_serve_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportResponse) ProtoMessage() {}

func (x *ExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_earbug_v4_serve_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportResponse.ProtoReflect.Descriptor instead.
func (*ExportResponse) Descriptor() ([]byte, []int) {
	return file_earbug_v4_serve_proto_rawDescGZIP(), []int{5}
}

func (x *ExportResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type ReportPlayedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Since *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=since,proto3" json:"since,omitempty"`
}

func (x *ReportPlayedRequest) Reset() {
	*x = ReportPlayedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_earbug_v4_serve_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportPlayedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportPlayedRequest) ProtoMessage() {}

func (x *ReportPlayedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_earbug_v4_serve_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportPlayedRequest.ProtoReflect.Descriptor instead.
func (*ReportPlayedRequest) Descriptor() ([]byte, []int) {
	return file_earbug_v4_serve_proto_rawDescGZIP(), []int{6}
}

func (x *ReportPlayedRequest) GetSince() *timestamppb.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

type ReportPlayedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Playbacks []*ReportPlayedResponse_Playback `protobuf:"bytes,1,rep,name=playbacks,proto3" json:"playbacks,omitempty"`
}

func (x *ReportPlayedResponse) Reset() {
	*x = ReportPlayedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_earbug_v4_serve_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportPlayedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportPlayedResponse) ProtoMessage() {}

func (x *ReportPlayedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_earbug_v4_serve_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportPlayedResponse.ProtoReflect.Descriptor instead.
func (*ReportPlayedResponse) Descriptor() ([]byte, []int) {
	return file_earbug_v4_serve_proto_rawDescGZIP(), []int{7}
}

func (x *ReportPlayedResponse) GetPlaybacks() []*ReportPlayedResponse_Playback {
	if x != nil {
		return x.Playbacks
	}
	return nil
}

type ReportPlayedResponse_Track struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ReportPlayedResponse_Track) Reset() {
	*x = ReportPlayedResponse_Track{}
	if protoimpl.UnsafeEnabled {
		mi := &file_earbug_v4_serve_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportPlayedResponse_Track) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportPlayedResponse_Track) ProtoMessage() {}

func (x *ReportPlayedResponse_Track) ProtoReflect() protoreflect.Message {
	mi := &file_earbug_v4_serve_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportPlayedResponse_Track.ProtoReflect.Descriptor instead.
func (*ReportPlayedResponse_Track) Descriptor() ([]byte, []int) {
	return file_earbug_v4_serve_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ReportPlayedResponse_Track) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReportPlayedResponse_Track) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ReportPlayedResponse_Artist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ReportPlayedResponse_Artist) Reset() {
	*x = ReportPlayedResponse_Artist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_earbug_v4_serve_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportPlayedResponse_Artist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportPlayedResponse_Artist) ProtoMessage() {}

func (x *ReportPlayedResponse_Artist) ProtoReflect() protoreflect.Message {
	mi := &file_earbug_v4_serve_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportPlayedResponse_Artist.ProtoReflect.Descriptor instead.
func (*ReportPlayedResponse_Artist) Descriptor() ([]byte, []int) {
	return file_earbug_v4_serve_proto_rawDescGZIP(), []int{7, 1}
}

func (x *ReportPlayedResponse_Artist) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReportPlayedResponse_Artist) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ReportPlayedResponse_Playback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime *timestamppb.Timestamp         `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Track     *ReportPlayedResponse_Track    `protobuf:"bytes,2,opt,name=track,proto3" json:"track,omitempty"`
	Artists   []*ReportPlayedResponse_Artist `protobuf:"bytes,3,rep,name=artists,proto3" json:"artists,omitempty"`
}

func (x *ReportPlayedResponse_Playback) Reset() {
	*x = ReportPlayedResponse_Playback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_earbug_v4_serve_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportPlayedResponse_Playback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportPlayedResponse_Playback) ProtoMessage() {}

func (x *ReportPlayedResponse_Playback) ProtoReflect() protoreflect.Message {
	mi := &file_earbug_v4_serve_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportPlayedResponse_Playback.ProtoReflect.Descriptor instead.
func (*ReportPlayedResponse_Playback) Descriptor() ([]byte, []int) {
	return file_earbug_v4_serve_proto_rawDescGZIP(), []int{7, 2}
}

func (x *ReportPlayedResponse_Playback) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ReportPlayedResponse_Playback) GetTrack() *ReportPlayedResponse_Track {
	if x != nil {
		return x.Track
	}
	return nil
}

func (x *ReportPlayedResponse_Playback) GetArtists() []*ReportPlayedResponse_Artist {
	if x != nil {
		return x.Artists
	}
	return nil
}

var File_earbug_v4_serve_proto protoreflect.FileDescriptor

var file_earbug_v4_serve_proto_rawDesc = []byte{
	0x0a, 0x15, 0x65, 0x61, 0x72, 0x62, 0x75, 0x67, 0x2f, 0x76, 0x34, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x73, 0x65, 0x61, 0x6e, 0x6b, 0x68, 0x6c,
	0x69, 0x61, 0x6f, 0x2e, 0x65, 0x61, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x76, 0x34, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1d,
	0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1e, 0x0a,
	0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x0a,
	0x10, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x22, 0x2e, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68,
	0x55, 0x72, 0x6c, 0x22, 0x39, 0x0a, 0x0d, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x2a,
	0x0a, 0x0e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x13, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x69,
	0x6e, 0x63, 0x65, 0x22, 0xa1, 0x03, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x73, 0x65, 0x61, 0x6e, 0x6b, 0x68, 0x6c, 0x69, 0x61, 0x6f, 0x2e, 0x65, 0x61, 0x72,
	0x62, 0x75, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x1a,
	0x2b, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x2c, 0x0a, 0x06,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0xda, 0x01, 0x0a, 0x08, 0x50,
	0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x73, 0x65, 0x61, 0x6e, 0x6b, 0x68, 0x6c, 0x69, 0x61, 0x6f, 0x2e, 0x65,
	0x61, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x4b, 0x0a, 0x07, 0x61, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x65,
	0x61, 0x6e, 0x6b, 0x68, 0x6c, 0x69, 0x61, 0x6f, 0x2e, 0x65, 0x61, 0x72, 0x62, 0x75, 0x67, 0x2e,
	0x76, 0x34, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x07,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x32, 0xa8, 0x03, 0x0a, 0x0d, 0x45, 0x61, 0x72, 0x62,
	0x75, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7d, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x64, 0x12, 0x31, 0x2e, 0x73, 0x65, 0x61, 0x6e, 0x6b, 0x68, 0x6c, 0x69, 0x61, 0x6f, 0x2e, 0x65,
	0x61, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73, 0x65, 0x61, 0x6e, 0x6b, 0x68, 0x6c, 0x69, 0x61,
	0x6f, 0x2e, 0x65, 0x61, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x2e, 0x73, 0x65, 0x61, 0x6e, 0x6b, 0x68, 0x6c, 0x69,
	0x61, 0x6f, 0x2e, 0x65, 0x61, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x73, 0x65, 0x61, 0x6e, 0x6b, 0x68, 0x6c, 0x69, 0x61, 0x6f, 0x2e, 0x65, 0x61, 0x72, 0x62, 0x75,
	0x67, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x23, 0x2e, 0x73, 0x65, 0x61, 0x6e, 0x6b, 0x68, 0x6c, 0x69, 0x61, 0x6f, 0x2e, 0x65, 0x61,
	0x72, 0x62, 0x75, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x61, 0x6e, 0x6b, 0x68, 0x6c, 0x69,
	0x61, 0x6f, 0x2e, 0x65, 0x61, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x0c, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x12, 0x29, 0x2e, 0x73, 0x65,
	0x61, 0x6e, 0x6b, 0x68, 0x6c, 0x69, 0x61, 0x6f, 0x2e, 0x65, 0x61, 0x72, 0x62, 0x75, 0x67, 0x2e,
	0x76, 0x34, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x65, 0x61, 0x6e, 0x6b, 0x68, 0x6c,
	0x69, 0x61, 0x6f, 0x2e, 0x65, 0x61, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0xc4, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x61, 0x6e, 0x6b,
	0x68, 0x6c, 0x69, 0x61, 0x6f, 0x2e, 0x65, 0x61, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x76, 0x34, 0x42,
	0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2a, 0x67,
	0x6f, 0x2e, 0x73, 0x65, 0x61, 0x6e, 0x6b, 0x68, 0x6c, 0x69, 0x61, 0x6f, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x61, 0x72, 0x62, 0x75, 0x67, 0x2f, 0x76, 0x34,
	0x3b, 0x65, 0x61, 0x72, 0x62, 0x75, 0x67, 0x76, 0x34, 0xa2, 0x02, 0x03, 0x53, 0x45, 0x58, 0xaa,
	0x02, 0x14, 0x53, 0x65, 0x61, 0x6e, 0x6b, 0x68, 0x6c, 0x69, 0x61, 0x6f, 0x2e, 0x45, 0x61, 0x72,
	0x62, 0x75, 0x67, 0x2e, 0x56, 0x34, 0xca, 0x02, 0x14, 0x53, 0x65, 0x61, 0x6e, 0x6b, 0x68, 0x6c,
	0x69, 0x61, 0x6f, 0x5c, 0x45, 0x61, 0x72, 0x62, 0x75, 0x67, 0x5c, 0x56, 0x34, 0xe2, 0x02, 0x20,
	0x53, 0x65, 0x61, 0x6e, 0x6b, 0x68, 0x6c, 0x69, 0x61, 0x6f, 0x5c, 0x45, 0x61, 0x72, 0x62, 0x75,
	0x67, 0x5c, 0x56, 0x34, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x16, 0x53, 0x65, 0x61, 0x6e, 0x6b, 0x68, 0x6c, 0x69, 0x61, 0x6f, 0x3a, 0x3a, 0x45,
	0x61, 0x72, 0x62, 0x75, 0x67, 0x3a, 0x3a, 0x56, 0x34, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_earbug_v4_serve_proto_rawDescOnce sync.Once
	file_earbug_v4_serve_proto_rawDescData = file_earbug_v4_serve_proto_rawDesc
)

func file_earbug_v4_serve_proto_rawDescGZIP() []byte {
	file_earbug_v4_serve_proto_rawDescOnce.Do(func() {
		file_earbug_v4_serve_proto_rawDescData = protoimpl.X.CompressGZIP(file_earbug_v4_serve_proto_rawDescData)
	})
	return file_earbug_v4_serve_proto_rawDescData
}

var file_earbug_v4_serve_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_earbug_v4_serve_proto_goTypes = []interface{}{
	(*UpdateRecentlyPlayedRequest)(nil),   // 0: seankhliao.earbug.v4.UpdateRecentlyPlayedRequest
	(*UpdateRecentlyPlayedResponse)(nil),  // 1: seankhliao.earbug.v4.UpdateRecentlyPlayedResponse
	(*AuthorizeRequest)(nil),              // 2: seankhliao.earbug.v4.AuthorizeRequest
	(*AuthorizeResponse)(nil),             // 3: seankhliao.earbug.v4.AuthorizeResponse
	(*ExportRequest)(nil),                 // 4: seankhliao.earbug.v4.ExportRequest
	(*ExportResponse)(nil),                // 5: seankhliao.earbug.v4.ExportResponse
	(*ReportPlayedRequest)(nil),           // 6: seankhliao.earbug.v4.ReportPlayedRequest
	(*ReportPlayedResponse)(nil),          // 7: seankhliao.earbug.v4.ReportPlayedResponse
	(*ReportPlayedResponse_Track)(nil),    // 8: seankhliao.earbug.v4.ReportPlayedResponse.Track
	(*ReportPlayedResponse_Artist)(nil),   // 9: seankhliao.earbug.v4.ReportPlayedResponse.Artist
	(*ReportPlayedResponse_Playback)(nil), // 10: seankhliao.earbug.v4.ReportPlayedResponse.Playback
	(*timestamppb.Timestamp)(nil),         // 11: google.protobuf.Timestamp
}
var file_earbug_v4_serve_proto_depIdxs = []int32{
	11, // 0: seankhliao.earbug.v4.ReportPlayedRequest.since:type_name -> google.protobuf.Timestamp
	10, // 1: seankhliao.earbug.v4.ReportPlayedResponse.playbacks:type_name -> seankhliao.earbug.v4.ReportPlayedResponse.Playback
	11, // 2: seankhliao.earbug.v4.ReportPlayedResponse.Playback.start_time:type_name -> google.protobuf.Timestamp
	8,  // 3: seankhliao.earbug.v4.ReportPlayedResponse.Playback.track:type_name -> seankhliao.earbug.v4.ReportPlayedResponse.Track
	9,  // 4: seankhliao.earbug.v4.ReportPlayedResponse.Playback.artists:type_name -> seankhliao.earbug.v4.ReportPlayedResponse.Artist
	0,  // 5: seankhliao.earbug.v4.EarbugService.UpdateRecentlyPlayed:input_type -> seankhliao.earbug.v4.UpdateRecentlyPlayedRequest
	2,  // 6: seankhliao.earbug.v4.EarbugService.Authorize:input_type -> seankhliao.earbug.v4.AuthorizeRequest
	4,  // 7: seankhliao.earbug.v4.EarbugService.Export:input_type -> seankhliao.earbug.v4.ExportRequest
	6,  // 8: seankhliao.earbug.v4.EarbugService.ReportPlayed:input_type -> seankhliao.earbug.v4.ReportPlayedRequest
	1,  // 9: seankhliao.earbug.v4.EarbugService.UpdateRecentlyPlayed:output_type -> seankhliao.earbug.v4.UpdateRecentlyPlayedResponse
	3,  // 10: seankhliao.earbug.v4.EarbugService.Authorize:output_type -> seankhliao.earbug.v4.AuthorizeResponse
	5,  // 11: seankhliao.earbug.v4.EarbugService.Export:output_type -> seankhliao.earbug.v4.ExportResponse
	7,  // 12: seankhliao.earbug.v4.EarbugService.ReportPlayed:output_type -> seankhliao.earbug.v4.ReportPlayedResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_earbug_v4_serve_proto_init() }
func file_earbug_v4_serve_proto_init() {
	if File_earbug_v4_serve_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_earbug_v4_serve_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRecentlyPlayedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_earbug_v4_serve_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRecentlyPlayedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_earbug_v4_serve_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_earbug_v4_serve_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_earbug_v4_serve_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_earbug_v4_serve_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_earbug_v4_serve_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportPlayedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_earbug_v4_serve_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportPlayedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_earbug_v4_serve_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportPlayedResponse_Track); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_earbug_v4_serve_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportPlayedResponse_Artist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_earbug_v4_serve_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportPlayedResponse_Playback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_earbug_v4_serve_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_earbug_v4_serve_proto_goTypes,
		DependencyIndexes: file_earbug_v4_serve_proto_depIdxs,
		MessageInfos:      file_earbug_v4_serve_proto_msgTypes,
	}.Build()
	File_earbug_v4_serve_proto = out.File
	file_earbug_v4_serve_proto_rawDesc = nil
	file_earbug_v4_serve_proto_goTypes = nil
	file_earbug_v4_serve_proto_depIdxs = nil
}
